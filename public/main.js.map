{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/notes/notes.component.html","webpack:///./src/app/notes/notes.component.scss","webpack:///./src/app/notes/notes.component.ts","webpack:///./src/app/pipes/trim.pipe.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/router.module.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/note.service.ts","webpack:///./src/app/services/register.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { FormComponent } from './form/form.component';\nimport { NoteService } from './services/note.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AppRoutingModule } from './router.module';\nimport { RouterModule } from '@angular/router';\n\n\nimport { LoginService } from './services/login.service';\nimport { RegisterService } from './services/register.service';\nimport { HomeComponent } from './home/home.component';\nimport { TrimString } from './pipes/trim.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotesComponent,\n    FormComponent,\n    LoginComponent,\n    RegisterComponent,\n    NavbarComponent,\n    HomeComponent,\n    TrimString\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    RouterModule,\n    ReactiveFormsModule\n  ],\n  providers: [NoteService, LoginService,RegisterService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"form{\\r\\n    padding: 20px;\\r\\n}\"","module.exports = \"<form [formGroup]=\\\"formNote\\\" (ngSubmit)=\\\"addNote()\\\">\\n  <h3 class=\\\"text-header text-center\\\">Add note</h3>\\n    <div class=\\\"form-group\\\">\\n      <label>Title note</label>\\n      <input type=\\\"text\\\"  name=\\\"title\\\" class=\\\"form-control\\\" formControlName=\\\"title\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Description</label>\\n      <textarea class=\\\"form-control\\\"  name=\\\"description\\\" formControlName=\\\"description\\\">\\n\\n      </textarea>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block\\\">Save</button>\\n  </form>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { NoteService } from '../services/note.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n\n  formNote: FormGroup\n  public titleNote: String;\n  public description: String;\n  @Output() noteData: EventEmitter<any> = new EventEmitter();\n  \n\n\n\n  constructor(private _noteService: NoteService, private _fb: FormBuilder) { this._noteService.getNotes(); }\n\n  ngOnInit() {\n    this.initForm()\n  }\n\n  public initForm() {\n    this.formNote = this._fb.group({\n      title: [null],\n      description: [null]\n    })\n  }\n  public addNote(): any {\n    if((this.formNote.value.title !='') && (this.formNote.value.description !='')) {\n      const note = {\n        'title': this.formNote.value.title,\n        'description': this.formNote.value.description,\n        'userId': localStorage.getItem(\"user-id-notes\")\n      };\n      this._noteService.addNote(note).subscribe((res) => {\n        console.log(res);\n        this.noteData.emit(res.Note);\n  \n        // reset form\n        this.formNote.reset()\n      }, (err) => console.log(err));\n    }\n    \n  }\n  \n\n\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col col-md-3\\\">\\n        <app-form (noteData)=\\\"getNoteFromForm($event)\\\"></app-form>\\n    </div>\\n\\n\\n    <div class=\\\"notes\\\">\\n        <div class=\\\"row\\\">\\n            <div *ngIf=\\\"listNotes.length!= 0\\\">\\n                <div *ngFor=\\\"let note of listNotes;\\\">\\n                    <app-notes  [note]=\\\"note\\\" (noteRemove)=\\\"removeNoteFromListHome($event)\\\"></app-notes>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NoteService } from '../services/note.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  listNotes = [];\n\n  constructor(private _noteService: NoteService, public router: Router) { }\n\n  ngOnInit() {\n\n    // check if token is founded\n    if(localStorage.getItem(\"token\")){\n      // get all notes from that user\n      this._noteService.getNotes().subscribe((res) => {\n        this.listNotes = res.notes;\n        console.log(this.listNotes)\n      });\n    }else{\n      // redirect to the login page\n      this.router.navigate([\"login\"])\n    }\n  }\n\n\n  public getNoteFromForm(event) {\n    console.log(\"Note from form component\")\n    console.log(event)\n    this.listNotes.splice(0,0,event)\n  }\n\n  public removeNoteFromListHome(noteId) {\n    this.listNotes.splice(this.listNotes.findIndex(e => e._id === noteId),1)\n  }\n\n}\n","module.exports = \".form-control-lg{\\r\\n    height: 80px;\\r\\n}\\r\\n\\r\\n.login, .login:hover {\\r\\n    background: #6675df;\\r\\n    border-color: #6675df\\r\\n}\"","module.exports = \"<div class=\\\"limiter\\\">\\n    <div class=\\\"container-login100\\\">\\n        <div class=\\\"wrap-login100\\\">\\n            <form class=\\\"login100-form validate-form\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"applyLogin(loginForm)\\\">\\n                <span class=\\\"login100-form-title p-b-43\\\">\\n                    Login to continue\\n                </span>\\n                \\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"loginError\\\">\\n                    <p>{{ loginError }}</p>\\n                </div>  \\n                \\n                <div class=\\\"wrap-input100 validate-input\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n                </div>\\n                \\n                \\n                <div class=\\\"wrap-input100\\\" >\\n                    <input type=\\\"password\\\" class=\\\"form-control form-control-lg\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n                </div>  \\n                <br>\\n                <div class=\\\"\\\">\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block login\\\"  value=\\\"Login\\\">\\n                        \\n                </div>\\n                \\n                <div class=\\\"text-center p-t-46 p-b-20\\\">\\n                    <span class=\\\"txt2\\\">\\n                        or <a href=\\\"\\\" routerLink=\\\"/register\\\">sign up</a>\\n                    </span>\\n                </div>\\n\\n                <!-- <div class=\\\"login100-form-social flex-c-m\\\">\\n                    <a href=\\\"#\\\" class=\\\"login100-form-social-item flex-c-m bg1 m-r-5\\\">\\n                        <i class=\\\"fa fa-facebook-f\\\" aria-hidden=\\\"true\\\"></i>\\n                    </a>\\n\\n                    <a href=\\\"#\\\" class=\\\"login100-form-social-item flex-c-m bg2 m-r-5\\\">\\n                        <i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i>\\n                    </a>\\n                </div> -->\\n            </form>\\n\\n            <div class=\\\"login100-more\\\" style=\\\"background-image: url('assets/images/notes.png');\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public loginError: String;\n  public email: String;\n  public password: String;\n\n  constructor(private _loginService: LoginService, public router: Router) { }\n\n  ngOnInit() {\n    // check if there is a token in the browser, ==> redirect him to myNotes component\n    if(localStorage.getItem(\"token\")){\n      \n      this.router.navigate([\"home\", localStorage.getItem(\"user-id-notes\")])\n    }\n  }\n\n\n  public applyLogin(formValue) {\n    this._loginService.login(formValue.value).subscribe( (res: any) => {\n\n      \n      if(res.auth == true){\n        // store the token on the browser\n        localStorage.setItem(\"token\", res.token)\n        localStorage.setItem(\"user-id-notes\", res.user_id);\n        this.loginError = \"\"\n\n        // navigate to the note component\n\n        this.router.navigate([\"home\", res.user_id])\n      }\n     \n    }, (err) => {\n        this.loginError = err.error.message\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">PlanNote</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav> <br><br>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\n  ngOnInit() {\n  }\n\n\n  public logout() {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user-id-notes\")\n    this.router.navigateByUrl(\"/login\")\n  }\n}\n","module.exports = \"<div class=\\\"col-sm\\\">\\n    <div class=\\\"note ui-draggable ui-draggable-handle\\\">\\n        <a href=\\\"javascript:;\\\" \\n        class=\\\"button edit\\\" \\n        data-toggle=\\\"modal\\\" \\n        data-target=\\\"#modal-update\\\"\\n        (click)=\\\"getNoteId(note)\\\">E</a>\\n\\n\\n        <a href=\\\"javascript:;\\\"  \\n        id=\\\"{{note._id}}\\\" \\n        class=\\\"button remove\\\" \\n        data-toggle=\\\"modal\\\" \\n        data-target=\\\"#modal-delete\\\" (click)=\\\"getNoteId(note)\\\">X</a>\\n\\n\\n        <div class=\\\"note_cnt\\\">\\n        <br>\\n        <h5 class=\\\"text-center\\\">{{note.title}}</h5>\\n        <br>\\n        <p > {{ note.description}} </p>\\n\\n\\n            <button class=\\\"btn btn-success\\\" *ngIf=\\\"modeEdit==true\\\" (click)=\\\"saveChanges(item)\\\">Save</button>\\n            <button class=\\\"btn btn-info\\\" *ngIf=\\\"modeEdit==true\\\" (click)=\\\"changeMode()\\\">Exit</button>\\n        </div> \\n    </div>\\n</div>\\n\\n\\n\\n\\n<!-- Modal for remove note -->\\n<div class=\\\"modal fade\\\" id=\\\"modal-delete\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\"  >\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Confirmation</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            Are you sure to delete this note...??\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn\\\" data-dismiss=\\\"modal\\\" style=\\\"color:white\\\">No..!</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteNote()\\\" data-dismiss=\\\"modal\\\" style=\\\"color:white\\\">Do it..!</button>\\n        </div>\\n    \\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Modal for update note -->\\n<div class=\\\"modal fade\\\" id=\\\"modal-update\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\"  >\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Update note</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <form action=\\\"\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Title</label>\\n                    <input type=\\\"text\\\" name=\\\"titleToUpdate\\\" class=\\\"form-control\\\" value=\\\"{{noteUI?.title}}\\\"\\n                    [(ngModel)]=\\\"titleToUpdate\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <textarea name=\\\"descriptionToUpdate\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"descriptionToUpdate\\\" value=\\\"{{noteUI?.description}}\\\"></textarea>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\" style=\\\"color:white\\\">I changed my mind..!</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"   style=\\\"color:white\\\" \\n            (click)=\\\"saveChanges(noteUI)\\\">Change it ..!</button>\\n        </div>\\n    \\n        </div>\\n    </div>\\n</div>\"","module.exports = \".row {\\n  padding-left: 10px; }\\n\\n/* * Hide from both screenreaders and browsers: h5bp.com/u */\\n\\n.hidden {\\n  display: none !important;\\n  visibility: hidden; }\\n\\n/* * Hide only visually, but have it available for screenreaders: h5bp.com/v */\\n\\n.visuallyhidden {\\n  border: 0;\\n  clip: rect(0 0 0 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px; }\\n\\n/* * Extends the .visuallyhidden class to allow the element to be focusable * when navigated to via the keyboard: h5bp.com/p */\\n\\n.visuallyhidden.focusable:active,\\n.visuallyhidden.focusable:focus {\\n  clip: auto;\\n  height: auto;\\n  margin: 0;\\n  overflow: visible;\\n  position: static;\\n  width: auto; }\\n\\n/* * Hide visually and from screenreaders, but maintain layout */\\n\\n.invisible {\\n  visibility: hidden; }\\n\\n.clearfix:before,\\n.clearfix:after {\\n  content: \\\" \\\";\\n  /* 1 */\\n  display: table;\\n  /* 2 */ }\\n\\n.clearfix:after {\\n  clear: both; }\\n\\n.noflick, #board, .note, .button {\\n  -webkit-perspective: 1000;\\n          perspective: 1000;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  -webkit-transform: translate3d(0, 0, 0);\\n          transform: translate3d(0, 0, 0); }\\n\\n/* ==========================================================================\\r\\n   Base styles: opinionated defaults\\r\\n   ========================================================================== */\\n\\n* {\\n  box-sizing: border-box; }\\n\\nhtml,\\nbutton,\\ninput,\\nselect,\\ntextarea {\\n  color: #000000; }\\n\\nbody {\\n  font-size: 1em;\\n  line-height: 1;\\n  background-color: white;\\n  background: linear-gradient(135deg, white 0%, #ebebeb 47%, #dedede 100%); }\\n\\n::-moz-selection {\\n  background: #B3D4FC;\\n  text-shadow: none; }\\n\\n::selection {\\n  background: #B3D4FC;\\n  text-shadow: none; }\\n\\na:focus {\\n  outline: none; }\\n\\n::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.7); }\\n\\n:placeholder {\\n  /* Firefox 18- */\\n  color: rgba(0, 0, 0, 0.7); }\\n\\n/* ==========================================================================\\r\\n   Author's custom styles\\r\\n   ========================================================================== */\\n\\n#board {\\n  padding: 100px 30px 30px;\\n  margin-top: 40px;\\n  overflow-y: visible; }\\n\\n.note {\\n  float: left;\\n  display: block;\\n  position: relative;\\n  padding: 2em;\\n  width: 250px;\\n  min-height: 250px;\\n  margin: 0 30px 30px 0;\\n  background: linear-gradient(top, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.25));\\n  background-color: #FFFD75;\\n  box-shadow: 5px 5px 10px -2px rgba(33, 33, 33, 0.3);\\n  -webkit-transform: rotate(2deg);\\n          transform: rotate(2deg);\\n  -webkit-transform: skew(-1deg, 1deg);\\n          transform: skew(-1deg, 1deg);\\n  transition: -webkit-transform .15s;\\n  transition: transform .15s;\\n  transition: transform .15s, -webkit-transform .15s;\\n  z-index: 1; }\\n\\n.note.ui-draggable-dragging:nth-child(n) {\\n    box-shadow: 5px 5px 15px 0 rgba(0, 0, 0, 0.3);\\n    -webkit-transform: scale(1.125) !important;\\n            transform: scale(1.125) !important;\\n    z-index: 100;\\n    cursor: move;\\n    transition: -webkit-transform .150s;\\n    transition: transform .150s;\\n    transition: transform .150s, -webkit-transform .150s; }\\n\\n.note textarea {\\n    background-color: transparent;\\n    border: none;\\n    resize: vertical;\\n    font-family: \\\"Gloria Hallelujah\\\", cursive;\\n    width: 100%;\\n    padding: 5px; }\\n\\n.note textarea:focus {\\n      outline: none;\\n      border: none;\\n      box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.2) inset; }\\n\\n.note textarea.title {\\n      font-size: 24px;\\n      line-height: 1.2;\\n      color: #000000;\\n      height: 64px;\\n      margin-top: 20px; }\\n\\n.note textarea.cnt {\\n      min-height: 200px; }\\n\\n.note:nth-child(2n) {\\n    background: #FAAACA; }\\n\\n.note:nth-child(3n) {\\n    background: #69F098; }\\n\\n/* Button style  */\\n\\n.button {\\n  font: bold 16px Helvetica, Arial, sans-serif;\\n  color: #FFFFFF;\\n  padding: 1em 2em;\\n  background: linear-gradient(top, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.3));\\n  background-color: #00CC00;\\n  border-radius: 3px;\\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3), inset 0 -1px 2px -1px rgba(0, 0, 0, 0.5), inset 0 1px 2px 1px rgba(255, 255, 255, 0.3);\\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.3), 0 1px 0 rgba(255, 255, 255, 0.3);\\n  text-decoration: none;\\n  transition: background .01s, -webkit-transform .150s;\\n  transition: transform .150s, background .01s;\\n  transition: transform .150s, background .01s, -webkit-transform .150s; }\\n\\n.button:hover {\\n    background-color: #00EE00;\\n    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.3), inset 0 -1px 2px -1px rgba(0, 0, 0, 0.5), inset 0 1px 2px 1px rgba(255, 255, 255, 0.3); }\\n\\n.button:active {\\n    background: linear-gradient(bottom, rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.3));\\n    background-color: #00CC00;\\n    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.3), 0 -1px 0 rgba(255, 255, 255, 0.3);\\n    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.3), inset 0 -1px 2px rgba(255, 255, 255, 0.3);\\n    outline: none; }\\n\\n.button.remove {\\n    position: absolute;\\n    top: 5px;\\n    right: 5px;\\n    width: 36px;\\n    height: 36px;\\n    border-radius: 50%;\\n    background-color: #E01C12;\\n    text-align: center;\\n    line-height: 16px;\\n    padding: 10px;\\n    border-color: #B30000;\\n    font-style: 1.6em;\\n    font-weight: bolder;\\n    font-family: Helvetica, Arial, sans-serif; }\\n\\n.button.remove:hover {\\n      background-color: #EF0005; }\\n\\n.button.edit {\\n    position: absolute;\\n    top: 5px;\\n    left: 5px;\\n    width: 36px;\\n    height: 36px;\\n    border-radius: 50%;\\n    background-color: lightgreen;\\n    text-align: center;\\n    line-height: 16px;\\n    padding: 10px;\\n    border-color: lightgreen;\\n    font-style: 1.6em;\\n    font-weight: bolder;\\n    font-family: Helvetica, Arial, sans-serif; }\\n\\n.button.edit:hover {\\n      background-color: lightgreen; }\\n\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { NoteService } from '../services/note.service';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.scss']\n})\nexport class NotesComponent implements OnInit {\n\n  \n  noteUI: any;\n  @Input() note: any;\n  @Output() noteRemove = new EventEmitter()\n  titleToUpdate: string;\n  descriptionToUpdate: string;\n\n  constructor(private _noteService: NoteService) {\n  }\n\n  ngOnInit() {  }\n\n\n\n  public getNoteId(noteID) {\n    this.noteUI = noteID\n    console.log(this.noteUI)\n  }\n\n  public deleteNote(){\n     this._noteService.deleteNote(this.noteUI._id).subscribe( (res) => {\n        // emit event\n        this.noteRemove.emit(this.noteUI._id)\n        console.log(res)\n     }, (err) => {\n       console.log(err)\n     })\n  }\n\n\n  public saveChanges(note) {\n    this._noteService.updateNote(note._id,this.titleToUpdate,this.descriptionToUpdate)\n      .subscribe((res) => {\n        console.log(res)\n        this.noteUI.title = this.titleToUpdate\n        this.noteUI.description = this.descriptionToUpdate \n      }, (err) => {\n        console.log(err)\n      })\n  }\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core'\r\n\r\n\r\n@Pipe({name: 'TrimString'})\r\n\r\nexport class TrimString implements PipeTransform {\r\n    transform(value: String, ...args: any[]) {\r\n        if(!value) {\r\n            return value\r\n        }\r\n\r\n        return value.split(' ').join('')\r\n    }\r\n}\r\n","module.exports = \".form-control-lg{\\r\\n  height: 80px;\\r\\n}\\r\\n\\r\\n.register{\\r\\n  background: #6675df;\\r\\n  border-color: #6675df\\r\\n}\"","module.exports = \"<div class=\\\"limiter\\\">\\n        <div class=\\\"container-login100\\\">\\n            <div class=\\\"wrap-login100\\\">\\n                <form class=\\\"login100-form validate-form\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"doRegister()\\\">\\n                    <span class=\\\"login100-form-title p-b-43\\\">\\n                        Register here\\n                    </span>\\n                    \\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"otherServerErrors.length!=0\\\">\\n                        <p *ngFor=\\\"let error of otherServerErrors\\\">{{ error.msg }}</p>\\n                    </div>  \\n\\n                    <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMesg\\\">\\n                        <p>{{ successMesg }}</p>\\n                    </div>  \\n\\n                    \\n                    <div class=\\\"wrap-input100 validate-input\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" name=\\\"firstname\\\" placeholder=\\\"Firstname...\\\"  formControlName=\\\"firstname\\\">\\n                        <div class=\\\"errors\\\" *ngIf=\\\"registerForm.controls['firstname'].touched && !registerForm.controls['firstname'].valid\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"registerForm.controls['firstname'].errors.required\\\">Firstname field is required</span>\\n                        </div>\\n                    </div>\\n                    <br>\\n                    \\n                    <div class=\\\"wrap-input100\\\" >\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" name=\\\"lastname\\\" placeholder=\\\"Lastname...\\\"  formControlName=\\\"lastname\\\">\\n                        <div class=\\\"errors\\\" *ngIf=\\\"registerForm.controls['lastname'].touched && !registerForm.controls['lastname'].valid\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"registerForm.controls['lastname'].errors.required\\\">Lastname field is required</span>\\n                        </div>\\n                    </div>\\n                    <br>\\n\\n                    <div class=\\\"wrap-input100\\\" >\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" name=\\\"v\\\" placeholder=\\\"Email adresse...\\\"  formControlName=\\\"email_adresse\\\">\\n                        <div class=\\\"errors\\\" *ngIf=\\\"registerForm.controls['email_adresse'].touched && !registerForm.controls['email_adresse'].valid\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"registerForm.controls['email_adresse'].errors.required\\\">Email field is required</span>\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"registerForm.controls['email_adresse'].errors.email\\\">Email is wrong, it should be like xzy@exemple.xyz</span>\\n                        </div>\\n\\n                        <div *ngIf=\\\"registerForm.valid && customEmailError\\\">\\n                            <span class=\\\"text-danger\\\">{{customEmailError}}</span>\\n                        </div>\\n                    </div>\\n                    <br>\\n\\n                    <div class=\\\"wrap-input100\\\" >\\n                        <input type=\\\"password\\\" class=\\\"form-control form-control-lg\\\"  name=\\\"password\\\" placeholder=\\\"Password....\\\"  formControlName=\\\"password\\\" minlength=\\\"5\\\">\\n                        <div class=\\\"errors\\\" *ngIf=\\\"registerForm.controls['password'].touched && !registerForm.controls['password'].valid\\\">\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"registerForm.controls['password'].errors.required\\\">Password field is required</span>\\n                            <span class=\\\"text-danger\\\" *ngIf=\\\"registerForm.controls['password'].errors.minlength\\\">Password must be at least 5 characters long</span>\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"\\\">\\n                        <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block register\\\" [disabled]=\\\"!registerForm.valid\\\" value=\\\"Register\\\">\\n                            \\n                    </div>\\n                    \\n                    <div class=\\\"text-center p-t-46 p-b-20\\\">\\n                        <span class=\\\"txt2\\\">\\n                            or <a href=\\\"\\\" routerLink=\\\"/login\\\">Login</a>\\n                        </span>\\n                    </div>\\n\\n                </form>\\n    \\n                <div class=\\\"login100-more\\\" style=\\\"background-image: url('assets/images/notes.png');\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm,FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { RegisterService } from '../services/register.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  otherServerErrors = [];\n  successMesg: String;\n  registerForm: FormGroup;\n\n  customEmailError: String;\n\n  constructor(private _registerService: RegisterService, private formBuilder: FormBuilder, public router: Router) { }\n\n  ngOnInit() {\n\n     // check if there is a token in the browser, ==> redirect him to myNotes component\n     if(localStorage.getItem(\"token\")){\n      this.router.navigate([\"notes\", localStorage.getItem(\"user-id-notes\")])\n    }\n    this.createRegister()\n  }\n\n\n  createRegister() {\n    this.registerForm = this.formBuilder.group({\n      firstname: ['',Validators.required],\n      lastname: ['',Validators.required],\n      email_adresse: ['',Validators.compose([Validators.required,Validators.email])],\n      password: ['',Validators.compose([Validators.required,Validators.minLength(5)])]\n\n    })\n  }\n\n  doRegister() {\n    this._registerService.register(this.registerForm.value).subscribe( (res) => {\n        this.successMesg = \"Register successed....\"\n        this.otherServerErrors = []\n        this.customEmailError = \"\"\n        console.log(res)\n        this.registerForm.reset()\n    }, (err) => {\n\n      for(let i=0;i<err.error.errors.length;i++){\n        if(err.error.errors[i].param == \"email\") {\n          this.customEmailError = \"E-mail already in use\"\n        }else{\n          this.otherServerErrors.push(err.error.errors[i])\n        }\n      }\n      console.log(this.otherServerErrors)\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NotesComponent } from './notes/notes.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nexport const routes: Routes  = [\r\n    {path: '', component: LoginComponent},\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'register', component: RegisterComponent},\r\n    {path: 'home/:id', component: HomeComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private _http: HttpClient) { }\n\n\n  public login(loginInformation) {\n    // return this._http.post('http://localhost:3000/api/login', loginInformation);\n    return this._http.post('/api/login', loginInformation);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoteService {\n  private userId;\n  constructor(private _http: HttpClient) { this.userId = localStorage.getItem(\"user-id-notes\")}\n\n  public getNotes(): any {\n    // return this._http.get('http://localhost:3000/api/list/'+this.userId);\n    return this._http.get('api/list/'+this.userId);\n  }\n\n  public addNote(note): any {\n    // return this._http.post('http://localhost:3000/api/add-note', note);\n    return this._http.post('/api/add-note', note);\n  }\n\n  public deleteNote(noteId): any {\n    // return this._http.delete('http://localhost:3000/api/delete-note/'+noteId);\n    return this._http.delete('/api/delete-note/'+noteId);\n  }\n\n\n  public updateNote(id,title,description):Observable<any> {\n    const info = {\n      noteId: id,\n      title: title,\n      description: description\n    }\n    // return this._http.put(\"http://localhost:3000/api/update-post\",info)\n    return this._http.put(\"/api/update-post\",info)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private _http: HttpClient) { }\n\n\n  public register(userData) {\n    console.log(userData)\n    // return this._http.post(\"http://localhost:3000/api/register\",userData);\n    return this._http.post(\"/api/register\",userData);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}